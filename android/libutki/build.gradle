apply plugin: "com.android.model.native"

model {

    android {
        compileSdkVersion = 23
        buildToolsVersion = '23.0.2'


        defaultConfig {
            minSdkVersion.apiLevel = 13
            targetSdkVersion.apiLevel = 23
            versionCode = 1
            versionName = '1.0'
        }
        ndk {
            moduleName = "utki"
            abiFilters.addAll(['armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64']) //this is default
            ldLibs.addAll(['android', 'log'])
            cppFlags.add("-std=c++11")
            cppFlags.add("-fexceptions")
            cppFlags.add("-frtti")
        }
    }


    android.sources {
        main {
            jni {
                exportedHeaders {
                    srcDir "../../src/"
                }
            }
        }
    }

}

// This is just copy out the header file and built lib into distribution
// directory, for clint application to use, it is the overhead of this sample:
//    both lib and app are put inside one project space
task(distributeLib, type : Copy) {
	// trigger build library
	dependsOn assemble
	into '../distribution/'
	from('../../src/utki/*.hpp') {
		into 'utki/'
	}
	from('build/outputs/native/release/lib') {
		into './'
	}
}


//apply plugin: 'com.android.model.library'
//
//model {
//    android {
//        compileSdkVersion = rootProject.ext.compileSdkVersion
//        buildToolsVersion = rootProject.ext.buildToolsVersion
//
//        defaultConfig.with {
//            minSdkVersion.apiLevel = 9
//            targetSdkVersion.apiLevel = 23
//            versionCode = 1
//            versionName = "1.0"
//        }
//    }
//
//    android.buildTypes {
//        release {
//            minifyEnabled = false
//            proguardFiles.add(file('proguard-rules.pro'))
//        }
//        debug {
//
//        }
//    }
//
//    android.ndk {
//        moduleName = "utki"
//            ldLibs.add('log')
//            cppFlags.add("-std=c++11")
//            cppFlags.add("-fexceptions")
//            cppFlags.add("-frtti")
////            stl = 'gnustl_shared'
////            ldFlags += ""
////            toolchain = "clang"
////            toolchainVersion = "3.9"
////            abiFilters += "x86"
////            CFlags += ""
////            debuggable = false
////            renderscriptNdkMode = false
////            stl = "system"
////            platformVersion = 15
//    }
//}
//
//dependencies {
////    compile fileTree(dir: 'libs', include: ['*.jar'])
////    testCompile 'junit:junit:4.12'
////    compile 'com.android.support:appcompat-v7:23.1.0'
//}
